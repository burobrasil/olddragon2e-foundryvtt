name: Release

on:
  release:
    types: [published]

env:
  package_type: system
  node_version: 20

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline

      - name: Lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline

      - name: Test
        run: npm run test:ci

  build:
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.get_id.outputs.id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline

      - name: Extract tag version number
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Extract FoundryVTT id
        id: get_id
        run: |
          value=$(jq -r '.id' src/${{ env.package_type }}.json)
          echo "id is $value"
          echo "id=$value" >> "$GITHUB_OUTPUT"

      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: 'src/${{ env.package_type }}.json'
        env:
          version: ${{ steps.get_version.outputs.version-without-v }}
          url: https://github.com/${{ github.repository }}
          manifest: https://github.com/${{ github.repository }}/releases/latest/download/${{ env.package_type }}.json
          download: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/${{ steps.get_id.outputs.id }}.zip

      - name: Build
        run: npm run build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  publish:
    needs:
      - lint
      - test
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download production artifacts for publication
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Create zip file
        working-directory: ./dist
        run: zip -r ../${{ needs.build.outputs.id }}.zip .

      - name: Create release
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: ${{ github.event.release.name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './dist/${{ env.package_type }}.json, ./${{ needs.build.outputs.id }}.zip'
          body: ${{ github.event.release.body }}
